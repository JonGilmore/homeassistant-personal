  - platform: hikvision
    host: 192.168.45.233
    username: !secret hik_usr
    password: !secret hik_pwd
    customize:
      motion:
        delay: 30
  - platform: hikvision
    host: 192.168.45.231
    username: !secret hik_usr
    password: !secret hik_pwd
    customize:
      motion:
        delay: 30
  - platform: hikvision
    host: 192.168.45.230
    username: !secret hik_usr
    password: !secret hik_pwd
    customize:
      motion:
        delay: 240
  - platform: hikvision
    host: 192.168.45.237
    username: !secret hik_usr
    password: !secret hik_pwd
    customize:
      motion:
        delay: 30


  - platform: mqtt
    name: "Deck Person"
    state_topic: "frigate/deck/objects"
    value_template: '{{ value_json.person }}'
    device_class: moving
    availability_topic: "frigate/available"
  - platform: mqtt
    name: "Driveway Person"
    state_topic: "frigate/driveway/objects"
    value_template: '{{ value_json.person }}'
    device_class: moving
    availability_topic: "frigate/available"
  - platform: mqtt
    name: "Doorbell Person"
    state_topic: "frigate/doorbell/objects"
    value_template: '{{ value_json.person }}'
    device_class: moving
    availability_topic: "frigate/available"
  - platform: mqtt
    name: "Garage Person"
    state_topic: "frigate/garage/objects"
    value_template: '{{ value_json.person }}'
    device_class: moving
    availability_topic: "frigate/available"
    
  - platform: template
    sensors:
      main_fridge_open_close:
        device_class: opening
        value_template: "{% if states.sensor.main_fridge_access_control.state == '23' %}Closed{% elif states.sensor.main_fridge_access_control.state == '22' %}Open{% else %}Unknown{% endif %}"
        friendly_name: "Main Fridge - open/close"
      basement_motions:
        friendly_name: 'Basement Motions'
        device_class: motion
        value_template: >-
          {{ is_state("sensor.basement_pir", "Violated")
          or is_state("sensor.workshop_pir", "Violated")
          or is_state("sensor.basement_stairs_pir", "Violated")
          or is_state("sensor.storage_pir", "Violated")
          or is_state("sensor.bar_pir", "Violated") }}
      main_motions:
        friendly_name: 'Main Motions'
        device_class: motion
        value_template: >-
          {{ is_state("sensor.foyer_pir", "Violated")
          or is_state("sensor.kitchen_pir", "Violated")
          or is_state("binary_sensor.living_room_multi_pir", "on")
          or is_state("binary_sensor.office_multi_pir", "on") }}
      garage_doors:
        friendly_name: 'Garage Doors'
        device_class: door
        value_template: >-
          {{ is_state("sensor.double_garage", "Violated")
          or is_state("sensor.single_garage", "Violated") }}
      moisture_sensors:
        friendly_name: 'Moisture Sensors'
        device_class: moisture
        value_template: >-
          {{ is_state("sensor.water_heater_leak_sensor", "Violated")
          or is_state("sensor.bar_fridge_leak_sensor", "Violated")
          or is_state("sensor.laundry_leak_sensor", "Violated")
          or is_state("binary_sensor.powder_room_water", "on")
          or is_state("binary_sensor.basement_fridge_water", "on")
          or is_state("binary_sensor.kitchen_dishwasher_leak_water", "on")
          or is_state("binary_sensor.kitchen_fridge_leak_water", "on")
          or is_state("binary_sensor.kitchen_sink_leak_water", "on")
          or is_state("sensor.sump_leak_sensor", "Violated") }}
      vacation_status:
        friendly_name: "Vacation?"
        device_class: occupancy
        value_template: >-
          {{ states.alarm_control_panel.area001.attributes["armed_status"] == "armed_to_vacation" }}
      alarm_occupancy_status:
        friendly_name: "Occupied-Alarm?"
        device_class: occupancy
        value_template: >-
          {{ not states.alarm_control_panel.area001.attributes["armed_status"] == "armed_to_vacation" or not states.alarm_control_panel.area001.attributes["armed_status"] == "armed_away" }}
      cell_occupancy_status:
        friendly_name: "Occupied-Cell?"
        device_class: occupancy
        value_template: >-
          {{ states.device_tracker.jon_ot.state == "home" or states.device_tracker.lauras_iphone.state == "home" }}
      sleep_status:
        friendly_name: "Sleeping?"
        value_template: >-
          {{ states.alarm_control_panel.area001.attributes["armed_status"] == "armed_to_night_instant" or states.alarm_control_panel.area001.attributes["armed_status"] == "armed_to_night" }}
      light_inside:
        friendly_name: "Light Inside?"
        device_class: light
        value_template: >-
          {{ states.sensor.main_tv_lux.state | int > 110 }}
      nabu_casa_cloud:
        friendly_name: 'Nabu Casa Cloud'
        value_template: >-
          {{ not states.binary_sensor.sleep_status.state
          or states.binary_sensor.vacation_status.state }}
          
# presence detection
  - platform: bayesian
    device_class: presence
    prior: 0.5
    name: 'Jon Presence'
    probability_threshold: 0.9
    observations:
      - entity_id: 'device_tracker.jon'
        prob_given_true: 0.9
        prob_given_false: 0.1
        platform: 'state'
        to_state: 'home'
      - entity_id: 'device_tracker.jon_ot'
        prob_given_true: 0.9
        prob_given_false: 0.1
        platform: 'state'
        to_state: 'home'
      - entity_id: 'device_tracker.mnjgilmorem'
        prob_given_true: 0.5
        prob_given_false: 0.5
        platform: 'state'
        to_state: 'home'
      - entity_id: 'binary_sensor.alarm_occupancy_status'
        prob_given_true: 0.8
        prob_given_false: 0.4
        platform: 'state'
        to_state: 'True'